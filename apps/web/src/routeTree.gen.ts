/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup/route'
import { Route as SigninRouteImport } from './routes/signin/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as AuthIndexRouteImport } from './routes/_auth/index.route'
import { Route as AuthAdminRouteImport } from './routes/_auth/admin/route'
import { Route as AuthAdminUsersRouteImport } from './routes/_auth/admin/users/route'
import { Route as AuthAdminRolesRouteImport } from './routes/_auth/admin/roles/route'
import { Route as AuthAdminPermissionsRouteImport } from './routes/_auth/admin/permissions/route'
import { Route as AuthAdminUsersIndexRouteImport } from './routes/_auth/admin/users/index.route'
import { Route as AuthAdminUsersUserIdRouteImport } from './routes/_auth/admin/users/$userId/route'

// Create Virtual Routes

const AuthSettingsLazyImport = createFileRoute('/_auth/_settings')()
const AuthProfileLazyImport = createFileRoute('/_auth/_profile')()
const AuthProfileProfileIndexLazyImport = createFileRoute(
  '/_auth/_profile/profile/',
)()
const AuthSettingsSettingsSecurityLazyImport = createFileRoute(
  '/_auth/_settings/settings/security',
)()
const AuthSettingsSettingsAppearanceLazyImport = createFileRoute(
  '/_auth/_settings/settings/appearance',
)()

// Create/Update Routes

const SignupRouteRoute = SignupRouteImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup/route.lazy').then((d) => d.Route))

const SigninRouteRoute = SigninRouteImport.update({
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signin/route.lazy').then((d) => d.Route))

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_auth/route.lazy').then((d) => d.Route))

const AuthIndexRouteRoute = AuthIndexRouteImport.update({
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/index.route.lazy').then((d) => d.Route),
)

const AuthSettingsLazyRoute = AuthSettingsLazyImport.update({
  id: '/_settings',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/_settings.lazy').then((d) => d.Route),
)

const AuthProfileLazyRoute = AuthProfileLazyImport.update({
  id: '/_profile',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/_profile.lazy').then((d) => d.Route),
)

const AuthAdminRouteRoute = AuthAdminRouteImport.update({
  path: '/admin',
  getParentRoute: () => AuthRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/route.lazy').then((d) => d.Route),
)

const AuthAdminUsersRouteRoute = AuthAdminUsersRouteImport.update({
  path: '/users',
  getParentRoute: () => AuthAdminRouteRoute,
} as any)

const AuthAdminRolesRouteRoute = AuthAdminRolesRouteImport.update({
  path: '/roles',
  getParentRoute: () => AuthAdminRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/roles/route.lazy').then((d) => d.Route),
)

const AuthAdminPermissionsRouteRoute = AuthAdminPermissionsRouteImport.update({
  path: '/permissions',
  getParentRoute: () => AuthAdminRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/permissions/route.lazy').then((d) => d.Route),
)

const AuthProfileProfileIndexLazyRoute =
  AuthProfileProfileIndexLazyImport.update({
    path: '/profile/',
    getParentRoute: () => AuthProfileLazyRoute,
  } as any).lazy(() =>
    import('./routes/_auth/_profile/profile.index.lazy').then((d) => d.Route),
  )

const AuthAdminUsersIndexRouteRoute = AuthAdminUsersIndexRouteImport.update({
  path: '/',
  getParentRoute: () => AuthAdminUsersRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/users/index.route.lazy').then((d) => d.Route),
)

const AuthSettingsSettingsSecurityLazyRoute =
  AuthSettingsSettingsSecurityLazyImport.update({
    path: '/settings/security',
    getParentRoute: () => AuthSettingsLazyRoute,
  } as any).lazy(() =>
    import('./routes/_auth/_settings/settings.security.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthSettingsSettingsAppearanceLazyRoute =
  AuthSettingsSettingsAppearanceLazyImport.update({
    path: '/settings/appearance',
    getParentRoute: () => AuthSettingsLazyRoute,
  } as any).lazy(() =>
    import('./routes/_auth/_settings/settings.appearance.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthAdminUsersUserIdRouteRoute = AuthAdminUsersUserIdRouteImport.update({
  path: '/$userId',
  getParentRoute: () => AuthAdminUsersRouteRoute,
} as any).lazy(() =>
  import('./routes/_auth/admin/users/$userId/route.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/admin': {
      id: '/_auth/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthAdminRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/_profile': {
      id: '/_auth/_profile'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthProfileLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/_settings': {
      id: '/_auth/_settings'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthSettingsLazyImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/admin/permissions': {
      id: '/_auth/admin/permissions'
      path: '/permissions'
      fullPath: '/admin/permissions'
      preLoaderRoute: typeof AuthAdminPermissionsRouteImport
      parentRoute: typeof AuthAdminRouteImport
    }
    '/_auth/admin/roles': {
      id: '/_auth/admin/roles'
      path: '/roles'
      fullPath: '/admin/roles'
      preLoaderRoute: typeof AuthAdminRolesRouteImport
      parentRoute: typeof AuthAdminRouteImport
    }
    '/_auth/admin/users': {
      id: '/_auth/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AuthAdminUsersRouteImport
      parentRoute: typeof AuthAdminRouteImport
    }
    '/_auth/admin/users/$userId': {
      id: '/_auth/admin/users/$userId'
      path: '/$userId'
      fullPath: '/admin/users/$userId'
      preLoaderRoute: typeof AuthAdminUsersUserIdRouteImport
      parentRoute: typeof AuthAdminUsersRouteImport
    }
    '/_auth/_settings/settings/appearance': {
      id: '/_auth/_settings/settings/appearance'
      path: '/settings/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthSettingsSettingsAppearanceLazyImport
      parentRoute: typeof AuthSettingsLazyImport
    }
    '/_auth/_settings/settings/security': {
      id: '/_auth/_settings/settings/security'
      path: '/settings/security'
      fullPath: '/settings/security'
      preLoaderRoute: typeof AuthSettingsSettingsSecurityLazyImport
      parentRoute: typeof AuthSettingsLazyImport
    }
    '/_auth/admin/users/': {
      id: '/_auth/admin/users/'
      path: '/'
      fullPath: '/admin/users/'
      preLoaderRoute: typeof AuthAdminUsersIndexRouteImport
      parentRoute: typeof AuthAdminUsersRouteImport
    }
    '/_auth/_profile/profile/': {
      id: '/_auth/_profile/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileProfileIndexLazyImport
      parentRoute: typeof AuthProfileLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRouteRoute: AuthRouteRoute.addChildren({
    AuthAdminRouteRoute: AuthAdminRouteRoute.addChildren({
      AuthAdminPermissionsRouteRoute,
      AuthAdminRolesRouteRoute,
      AuthAdminUsersRouteRoute: AuthAdminUsersRouteRoute.addChildren({
        AuthAdminUsersUserIdRouteRoute,
        AuthAdminUsersIndexRouteRoute,
      }),
    }),
    AuthProfileLazyRoute: AuthProfileLazyRoute.addChildren({
      AuthProfileProfileIndexLazyRoute,
    }),
    AuthSettingsLazyRoute: AuthSettingsLazyRoute.addChildren({
      AuthSettingsSettingsAppearanceLazyRoute,
      AuthSettingsSettingsSecurityLazyRoute,
    }),
    AuthIndexRouteRoute,
  }),
  SigninRouteRoute,
  SignupRouteRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/signin",
        "/signup"
      ]
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/admin",
        "/_auth/_profile",
        "/_auth/_settings",
        "/_auth/"
      ]
    },
    "/signin": {
      "filePath": "signin/route.tsx"
    },
    "/signup": {
      "filePath": "signup/route.tsx"
    },
    "/_auth/admin": {
      "filePath": "_auth/admin/route.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/admin/permissions",
        "/_auth/admin/roles",
        "/_auth/admin/users"
      ]
    },
    "/_auth/_profile": {
      "filePath": "_auth/_profile.lazy.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/_profile/profile/"
      ]
    },
    "/_auth/_settings": {
      "filePath": "_auth/_settings.lazy.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/_settings/settings/appearance",
        "/_auth/_settings/settings/security"
      ]
    },
    "/_auth/": {
      "filePath": "_auth/index.route.tsx",
      "parent": "/_auth"
    },
    "/_auth/admin/permissions": {
      "filePath": "_auth/admin/permissions/route.tsx",
      "parent": "/_auth/admin"
    },
    "/_auth/admin/roles": {
      "filePath": "_auth/admin/roles/route.tsx",
      "parent": "/_auth/admin"
    },
    "/_auth/admin/users": {
      "filePath": "_auth/admin/users/route.tsx",
      "parent": "/_auth/admin",
      "children": [
        "/_auth/admin/users/$userId",
        "/_auth/admin/users/"
      ]
    },
    "/_auth/admin/users/$userId": {
      "filePath": "_auth/admin/users/$userId/route.tsx",
      "parent": "/_auth/admin/users"
    },
    "/_auth/_settings/settings/appearance": {
      "filePath": "_auth/_settings/settings.appearance.lazy.tsx",
      "parent": "/_auth/_settings"
    },
    "/_auth/_settings/settings/security": {
      "filePath": "_auth/_settings/settings.security.lazy.tsx",
      "parent": "/_auth/_settings"
    },
    "/_auth/admin/users/": {
      "filePath": "_auth/admin/users/index.route.tsx",
      "parent": "/_auth/admin/users"
    },
    "/_auth/_profile/profile/": {
      "filePath": "_auth/_profile/profile.index.lazy.tsx",
      "parent": "/_auth/_profile"
    }
  }
}
ROUTE_MANIFEST_END */
