name: Deploy API Production
  
on:
  push:
    branches: [main]
  pull_request:
    branches: ["main"]
  workflow_call:
    secrets: 
      CLOUDFLARE_API_TOKEN: 
        required: true

jobs:
  deploy:
    environment: Production
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Enable corepack
        shell: bash
        run: corepack enable

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        shell: bash
        run: |
          pnpm install --recursive
          npm i -g wrangler

      - name: Build
        run: pnpm run build:api

      - name: Deploy
        run: wrangler deploy --minify --env=production --var VERSION:$(git rev-parse --short HEAD)
        working-directory: apps/api
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
